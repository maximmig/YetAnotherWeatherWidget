@import "@jetbrains/ring-ui/components/global/variables.css";
@import "./variables.css";

@value unit from "@jetbrains/ring-ui/components/global/global.css";
@value s-screen-width, s-screen-height, m-screen-width, m-screen-height from "./variables.css";

:global(.widget-body) {
  margin: 0;
  padding: calc(unit * 2);

  background: var(--ring-content-background-color);

  font-size: var(--ring-font-size);
}

.widget {
  composes: font from "@jetbrains/ring-ui/components/global/global.css";

  margin: 0;
  padding: 0;
}

.futureForecast {
  opacity: .7;
}

/* flexible structure, to keep things in one place */
:global(html) {
  height: 100%;
}

:global(.widget-body) {
  box-sizing: border-box;
  height: 100%;
  padding: calc(unit * 2);
}

:global(#app-container) {
  box-sizing: border-box;
  height: 100%;
}

.widget {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.widgetTabs {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  height: 100%;

  @media m-screen-height {
    & > div:first-child {
      margin-bottom: unit;
    }
  }

  @media s-screen-height, s-screen-width {
    & > div:first-child {
      display: none;
    }
  }
}

/* no selector for tab content element, proprietary design */
.widgetTabs > div:last-child {
  flex-grow: 1;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
}

.locationHeader {
  @media s-screen-height {
    & {
      display: none;
    }
  }
}

.todayTab {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.todayTabTime,
.tomorrowTabTime {
  @media s-screen-height {
    & {
      display: none;
    }
  }
}

.tomorrowTabTime,
.fiveDaysTabTime {
  @media s-screen-width {
    & {
      display: none;
    }
  }
}

.todayTabCurrentConditions {
  flex-basis: 70%;

  @media s-screen-width, s-screen-height, m-screen-height {
    & {
      flex-basis: 100%;
    }
  }
}

.todayTabCurrentConditionsTime {
  @media s-screen-width {
    & {
      display: none;
    }
  }
}

.todayTabDailyForecast {
  flex-basis: 30%;

  @media s-screen-height, m-screen-height {
    & {
      display: none !important;
    }
  }
}
